upstream serverone { # name to be referenced under the server > proxy_pass section below
    server server1; # ip address or hostname of server 
}

upstream servertwo { # name to be referenced under the server > proxy_pass section below
    server server2; # ip address or hostname of server
}

upstream mw { # name to be referenced under the server > proxy_pass section below
    server mediawiki; # ip address or hostname of server
}

server {
	listen 80;

    error_log /var/log/nginx/error.log debug;
    rewrite_log on;

	# server_name localhost;

    # location / {
    #     root /usr/share/nginx/html;
    # }

    location /1 {
        proxy_pass http://serverone/;
    }

	location /2 {
        proxy_pass http://servertwo/;
    }

    # this works except no css
    # location /wiki/ {
    #     proxy_pass  http://mw/;
    #     # if ($request_uri ~ ^/wiki/images)     { break; }
    #     # if ($request_uri ~ ^/wiki/resources)  { break; }
    #     # if ($request_uri ~ ^/wiki/index\.php) { break; }
    #     # if ($request_uri ~ ^/wiki/api\.php)  { break; }
    #     # if ($request_uri ~ ^/wiki/load\.php)  { break; }
    #     # rewrite ^/wiki/(.+)$ /wiki/index.php?title=$1 last;
    # }

    index  index.html index.htm index.php;

    # Redirect to Mediawiki install path
    location /wiki/ {
        if ($request_uri ~ ^/images)     { break; }
        if ($request_uri ~ ^/resources)  { break; }
        if ($request_uri ~ ^/index\.php) { break; }
        if ($request_uri ~ ^/api\.php)  { break; }
        if ($request_uri ~ ^/load\.php)  { break; }
        # rewrite ^/(.*)$ index.php?title=$1&$args;
        proxy_pass  http://mw/;
    }



    # # this works except no css
    # location /w/ {
    #     rewrite ^ /w/index.php?$request_uri;
    #     proxy_pass  http://mw/;
    # }

    #  location /w2/{ 
    #     index index.php index.html; 
    #     rewrite ^ /w/index.php?$request_uri;
    #     try_files $uri $uri /w2/index.php?query_string; 
    #     proxy_pass  http://mw/;

    # }

    # location /w(/.*)$ {
    #     rewrite ^ $1 break;
    #     proxy_pass  http://mw/w$1;
    #     # proxy_set_header Host $host;
    #     # proxy_set_header X-Real-IP $remote_addr;
    #     # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     # proxy_set_header X-Forwarded-Proto $scheme;
    # }

    # location /w {
    #     # proxy_set_header X-Real-IP  $remote_addr;
    #     # proxy_set_header X-Forwarded-For $remote_addr;
    #     # proxy_set_header Host $host;
    #     proxy_pass http://mw;
    #     try_files $uri $uri/ /index.php?$query_string;
    # }

    # location / {
    #     proxy_pass http://mediawiki/;

    #     # rewrite ^/mediawiki(/.*)$ $1 break;
    #     # proxy_set_header Host $host;
    #     # proxy_set_header X-Real-IP $remote_addr;
    #     # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     # proxy_set_header X-Forwarded-Proto https;
    #     # proxy_redirect    off;

    #     # proxy_redirect     off;
    #     # proxy_set_header   Host $host;
    #     # proxy_set_header   X-Real-IP $remote_addr;
    #     # proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    #     # proxy_set_header   X-Forwarded-Host $server_name;

    #     # proxy_redirect http://$host/ /mediawiki/;
    #     # proxy_set_header Host $host;

    #     # proxy_redirect     off;
    #     # proxy_set_header   Host $host;
    #     # proxy_set_header   X-Real-IP $remote_addr;
    #     # proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    #     # proxy_set_header   X-Forwarded-Host $server_name;

    #     # proxy_set_header Host $host;
    #     # proxy_set_header X-Real-IP $remote_addr;
    #     # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     # proxy_next_upstream error http_502;
    # }

    # error_page 403 /error/403.html;
    # error_page 404 /error/404.html;
    # error_page 405 /error/405.html;
    # error_page 500 501 502 503 504 /error/5xx.html;

    # location ^~ /error/ {
    #     internal;
    #     root /var/www/default;
    # }
}   